// Milestone 2 REST Server Tests with Expected Results
// ======================================================

// SUCCESS: Login with Basic Authentication as admin with correct credentials (admin:123)
// Expected: 200 OK with token in Authorization header and user details in body
###
# @name loginAdminCorrect
GET http://localhost/api/authenticate
Authorization: Basic YWRtaW46MTIz

// FAIL: Login with Basic Authentication as admin with incorrect credentials
// Expected: 401 Unauthorized with error message
###
GET http://localhost/api/authenticate
Authorization: Basic admin:asdf

@adminToken = {{loginAdminCorrect.response.headers.Authorization}}

// FAIL: List all users without providing a token
// Expected: 401 Unauthorized with error message
###
GET http://localhost/api/users

// SUCCESS: List all users with admin token
// Expected: 200 OK with array of users (without passwords)
###
GET http://localhost/api/users
Authorization: {{adminToken}}

// SUCCESS: Create a new user "manfred" as admin
// Expected: 201 Created with user details (without password)
###
POST http://localhost/api/users
Authorization: {{adminToken}}
Content-Type: application/json

{
    "userID": "manfred",
    "firstName": "Manfred",
    "lastName": "Mustermann",
    "password": "asdf"
}

// SUCCESS: Retrieve the created user with admin token
// Expected: 200 OK with user details (without password)
###
GET http://localhost/api/users/manfred
Authorization: {{adminToken}}

// SUCCESS: Update user "manfred" with admin token
// Expected: 200 OK with updated user details
###
PUT http://localhost/api/users/manfred
Content-Type: application/json
Authorization: {{adminToken}}

{
    "firstName": "Sandra",
    "lastName": "Meier"
}

// SUCCESS: Login with Basic Authentication as manfred with correct credentials
// Expected: 200 OK with token in Authorization header and user details in body
###
# @name loginManfredCorrect
GET http://localhost/api/authenticate
Authorization: Basic manfred:asdf

@manfredToken = {{loginManfredCorrect.response.headers.Authorization}}

// FAIL: List all users with manfred's token (non-admin)
// Expected: 403 Forbidden with error message about admin privileges required
###
GET http://localhost/api/users
Authorization: {{manfredToken}}

// SUCCESS: List all degree courses with admin token
// Expected: 200 OK with array of degree courses (may be empty initially)
###
GET http://localhost/api/degreeCourses
Authorization: {{adminToken}}

// SUCCESS: Create a degree course as admin
// Expected: 201 Created with degree course details
###
# @name createDegreeCourseRequest
POST http://127.0.0.1/api/degreeCourses
Authorization: {{adminToken}}
Content-Type: application/json

{
    "universityName": "Beuth Hochschule f√ºr Technik Berlin",
    "universityShortName": "Beuth HS",
    "departmentName": "Informatik und Medien",
    "departmentShortName": "FB VI",
    "name": "Orchideenzucht Bachelor",
    "shortName": "OZ-BA"
}

###
@degreeCourseID = {{createDegreeCourseRequest.response.body.id}}

// SUCCESS: List all degree courses after creation
// Expected: 200 OK with array containing the created degree course
###
GET http://localhost/api/degreeCourses
Authorization: {{adminToken}}

// SUCCESS: Retrieve the created degree course by ID
// Expected: 200 OK with degree course details
###
GET http://localhost/api/degreeCourses/{{degreeCourseID}}
Authorization: {{adminToken}}

// SUCCESS: Update the degree course name as admin
// Expected: 200 OK with updated degree course details
###
PUT http://localhost/api/degreeCourses/{{degreeCourseID}}
Authorization: {{adminToken}}
Content-Type: application/json

{
    "name": "Tulpenzucht"
}

// SUCCESS: List degree courses filtered by university short name
// Expected: 200 OK with array of matching degree courses
###
GET http://localhost/api/degreeCourses?universityShortName=Beuth HS
Authorization: {{adminToken}}

// SUCCESS: Delete the created degree course as admin
// Expected: 204 No Content
###
DELETE http://localhost/api/degreeCourses/{{degreeCourseID}}
Authorization: {{adminToken}}

// SUCCESS: Delete user "manfred" as admin
// Expected: 204 No Content
###
DELETE http://localhost/api/users/manfred
Authorization: {{adminToken}}
